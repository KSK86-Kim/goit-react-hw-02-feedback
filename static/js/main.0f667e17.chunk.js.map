{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","this","props","title","children","Component","FeedbackOptions","options","onLeaveFeedback","className","styles","map","option","onClick","name","React","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","onFeedbackClick","event","feedback","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","Math","floor","keys","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPAkBeA,E,4JAdX,WACI,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACI,oCACI,6BAAKD,IACJC,S,GANKC,a,gBCyBPC,E,4JAvBX,WACI,MAAqCL,KAAKC,MAAlCK,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACI,qBAAKC,UAAWC,IAAO,mBAAvB,SACKH,EAAQI,KAAI,SAAAC,GAAM,OACf,wBAEIC,QAASL,EACTM,KAAMF,EAHV,SAKKA,GAJIA,Y,GAPCG,IAAMV,WCsBrBW,E,4JAtBX,WACI,MAA0Df,KAAKC,MAAvDe,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACI,gCACI,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,e,GATSN,IAAMV,WCWhBiB,E,4JAVX,WACI,IAAQC,EAAYtB,KAAKC,MAAjBqB,QACR,OAAO,4BAAIA,Q,GAHQlB,aCyDZmB,E,4MArDXC,MAAQ,CACJR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTO,gBAAkB,SAAAC,GACd,IAAMC,EAAWD,EAAME,OAAOf,KAC9B,EAAKgB,UAAS,SAAAC,GACV,OAAO,eAAGH,EAAWG,EAAUH,GAAY,O,EAInDI,mBAAqB,WAEjB,OADwBC,OAAOC,OAAO,EAAKT,OACpBU,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IAAI,I,EAGzDC,gCAAkC,WAC9B,OAAK,EAAKN,qBACcO,KAAKC,MACxB,EAAKf,MAAMR,KAAO,EAAKe,qBAAwB,KAFb,M,4CAO3C,WACI,OACI,sBAAKvB,UAAU,MAAf,UACI,cAAC,EAAD,CAASN,MAAM,wBAAf,SACI,cAAC,EAAD,CACII,QAAS0B,OAAOQ,KAAKxC,KAAKwB,OAC1BjB,gBAAiBP,KAAKyB,oBAG9B,cAAC,EAAD,CAASvB,MAAM,aAAf,SACKF,KAAK+B,qBACF,cAAC,EAAD,CACIf,KAAMhB,KAAKwB,MAAMR,KACjBC,QAASjB,KAAKwB,MAAMP,QACpBC,IAAKlB,KAAKwB,MAAMN,IAChBC,MAAOnB,KAAK+B,qBACZX,mBAAoBpB,KAAKqC,oCAG7B,cAAC,EAAD,CAAcf,QAAQ,+B,GA9C5BlB,a,MCDlBqC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,kBCR5BC,EAAOC,QAAU,CAAC,kBAAkB,4C","file":"static/js/main.0f667e17.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const { title, children } = this.props;\r\n        return (\r\n            <section>\r\n                <h2>{title}</h2>\r\n                {children}\r\n            </section>\r\n        );\r\n    }\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nclass FeedbackOptions extends React.Component {\r\n    render() {\r\n        const { options, onLeaveFeedback } = this.props;\r\n        return (\r\n            <div className={styles['buttons-wrapper']}>\r\n                {options.map(option => (\r\n                    <button\r\n                        key={option}\r\n                        onClick={onLeaveFeedback}\r\n                        name={option}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func,\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Statistics extends React.Component {\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n        return (\r\n            <div>\r\n                <p>Good : {good}</p>\r\n                <p>Neutral : {neutral}</p>\r\n                <p>Bad : {bad}</p>\r\n                <p>Total : {total}</p>\r\n                <p>Positive feedback : {positivePercentage} %</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Notification extends Component {\r\n    render() {\r\n        const { message } = this.props;\r\n        return <p>{message}</p>;\r\n    }\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    onFeedbackClick = event => {\n        const feedback = event.target.name;\n        this.setState(prevState => {\n            return { [feedback]: prevState[feedback] + 1 };\n        });\n    };\n\n    countTotalFeedback = () => {\n        const totalVotesArray = Object.values(this.state);\n        return totalVotesArray.reduce((acc, el) => acc + el, 0);\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        if (!this.countTotalFeedback()) return null;\n        const positivePercent = Math.floor(\n            (this.state.good / this.countTotalFeedback()) * 100,\n        );\n        return positivePercent;\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={Object.keys(this.state)}\n                        onLeaveFeedback={this.onFeedbackClick}\n                    ></FeedbackOptions>\n                </Section>\n                <Section title=\"Statistics\">\n                    {this.countTotalFeedback() ? (\n                        <Statistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={this.countTotalFeedback()}\n                            positivePercentage={this.countPositiveFeedbackPercentage()}\n                        ></Statistics>\n                    ) : (\n                        <Notification message=\"No feedback gicen\"></Notification>\n                    )}\n                </Section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.module.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons-wrapper\":\"FeedbackOptions_buttons-wrapper__10BTD\"};"],"sourceRoot":""}